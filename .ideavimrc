" Editor properties 
set noswapfile              " do not create swap files
set laststatus=2            " show status line
set nocompatible            " disable compatibility to old-time vi
set showmatch               " show matching 
set number relativenumber   " show line number in current line
set relativenumber          " enable relative line numbers
set scrolloff=10            " scroll n lines beyond current line
set ignorecase              " case insensitive 
set mouse=v                 " middle-click paste with 
set hlsearch                " highlight search 
set incsearch               " incremental search
set tabstop=4               " number of columns occupied by a tab 
set softtabstop=4           " see multiple spaces as tab stops so <BS> does the right thing
set expandtab               " converts tabs to white space
set shiftwidth=4            " width for indents
set autoindent              " indent a new line the same amount as the line just typed
set wildmode=longest,list   " get bash-like tab completions
set cc=100                  " set an 100 column border 
set mouse=a                 " enable mouse click
set encoding=utf-8          " file encoding
set cursorline              " highlight current line
set ttyfast                 " speed up scrolling 
set foldmethod=manual       " enable folding
set spell                   " enable spell check (may need to download language package)

" set backupdir=~/.cache/vim " Directory to store backup files.


" Keyboard

let mapleader=' '
map <leader>f :call FormatBuffer()<CR>
nmap <leader>o <Esc>o<Esc>
imap jk <ESC>

set backspace=eol,start,indent

autocmd BufWritePre *.h,*.hpp,*.c,*.cpp :call FormatBuffer()


" Function definitions

function FormatBuffer()
  if &modified && !empty(findfile('.clang-format', expand('%:p:h') . ';'))
    let cursor_pos = getpos('.')
    :%!clang-format
    call setpos('.', cursor_pos)
  endif
endfunction
